{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all the resources."
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[concat('fnapp', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Azure Functions app."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('functionAppName'), 'HostingPlan')]",
      "metadata": {
        "description": "Specifies the name of the hosting plan."
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('functionAppName'), 'ApplicationInsights')]",
      "metadata": {
        "description": "Specifies the name of the Application Insights used by Azure Functions."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('storage', uniquestring(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the storage account."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "eventHubsNamespace": {
      "type": "string",
      "defaultValue": "[concat('eventhubs', uniquestring(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of Event Hubs namespace."
      }
    },
    "eventHubsNamespaceSku": {
      "type": "string",
      "allowedValues": ["Basic", "Standard"],
      "defaultValue": "Standard",
      "metadata": {
        "description": "Specifies the messaging tier for service Bus namespace."
      }
    },
    "eventHubsNamespaceCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Specifies the Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "[concat('eventhub', uniquestring(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of the Event Hub."
      }
    },
    "messageRetentionInDays": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Specifies the number of days to retain the events for this Event Hub, value should be 1 to 7 days."
      }
    },
    "partitionCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Specifies the number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
      }
    },
    "consumerGroupName": {
      "type": "string",
      "defaultValue": "[concat('consumergroup', uniquestring(resourceGroup().id))]",
      "metadata": {
        "description": "Specifies the name of a new Consumer Group."
      }
    },
    "eventHubsNamespaceZoneRedundant": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enabling this property creates a Event Hubs Namespace in regions that support availability zones."
      }
    },
    "captureEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Indicates whether event capture is enabled."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "RedStoragePrivateLinkProdLogAnalytics",
      "metadata": {
        "description": "Specifies the globally unique name of the Log Analytics workspace."
      }
    },
    "workspaceSku": {
      "type": "string",
      "allowedValues": [
        "PerGB2018",
        "Free",
        "Standalone",
        "PerNode",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "Specifies the SKU of the Log Analytics workspace."
      }
    },
    "retentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "Specifies the number of retention days of logs and metrics in the Log Analytics workspace."
      }
    },
    "capturesContainerName": {
      "type": "string",
      "defaultValue": "captures",
      "metadata": {
        "description": "Specifies the name of the container used for Event Hub captures."
      }
    },
    "checkpointsContainerName": {
      "type": "string",
      "defaultValue": "checkpoints",
      "metadata": {
        "description": "Specifies the name of the container used for Event Hub checkpoints."
      }
    },
    "snapshotsContainerName": {
      "type": "string",
      "defaultValue": "snapshots",
      "metadata": {
        "description": "Specifies the name of the container used for status snapshots."
      }
    }
  },
  "variables": {
    "storageBlobDataOwnerRoleDefinitionName": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "azureEventHubsDataOwnerRoleDefinitionName": "f526a384-b230-433a-b45c-95f59c4a2dec",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "functionAppId": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
    "hostingPlanId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
    "applicationInsightsId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
    "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
    "eventHubsNamespaceId": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubsNamespace'))]",
    "storageBlobDataOwnerRoleDefinitionId": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/', variables('storageBlobDataOwnerRoleDefinitionName'))]",
    "storageBlobDataOwnerAssignmentName": "[guid(concat(resourceGroup().id, parameters('storageAccountName'), variables('storageBlobDataOwnerRoleDefinitionName')))]",
    "azureEventHubsDataOwnerRoleDefinitionId": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/', variables('azureEventHubsDataOwnerRoleDefinitionName'))]",
    "azureEventHubsDataOwnerAssignmentName": "[guid(concat(resourceGroup().id, parameters('eventHubsNamespace'), variables('azureEventHubsDataOwnerRoleDefinitionName')))]"
  },
  "resources": [
    {
      "apiVersion": "2021-06-01-preview",
      "name": "[parameters('eventHubsNamespace')]",
      "type": "Microsoft.EventHub/namespaces",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventHubsNamespaceSku')]",
        "tier": "[parameters('eventHubsNamespaceSku')]",
        "capacity": "[parameters('eventHubsNamespaceCapacity')]"
      },
      "properties": {
        "zoneRedundant": "[parameters('eventHubsNamespaceZoneRedundant')]"
      },
      "resources": [
        {
          "apiVersion": "2021-06-01-preview",
          "name": "[parameters('eventHubName')]",
          "type": "eventhubs",
          "dependsOn": [
            "[variables('eventHubsNamespaceId')]",
            "[variables('storageAccountId')]"
          ],
          "properties": {
            "captureDescription": {
              "destination": {
                "name": "EventHubArchive.AzureBlockBlob",
                "properties": {
                  "blobContainer": "[parameters('capturesContainerName')]",
                  "storageAccountResourceId": "[variables('storageAccountId')]"
                }
              },
              "enabled": "[parameters('captureEnabled')]",
              "encoding": "Avro",
              "intervalInSeconds": "300",
              "skipEmptyArchives": true
            },
            "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
            "partitionCount": "[parameters('partitionCount')]"
          },
          "resources": [
            {
              "apiVersion": "2021-06-01-preview",
              "name": "[parameters('consumerGroupName')]",
              "type": "consumergroups",
              "dependsOn": ["[parameters('eventHubName')]"],
              "properties": {
                "userMetadata": "This consumer group is used by the Azure Function."
              }
            }
          ]
        },
        {
          "type": "providers/diagnosticsettings",
          "name": "Microsoft.Insights/service",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[variables('eventHubsNamespaceId')]",
            "[variables('workspaceId')]"
          ],
          "properties": {
            "workspaceId": "[variables('workspaceId')]",
            "logs": [
              {
                "category": "ArchiveLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "OperationalLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "AutoScaleLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "KafkaCoordinatorLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "KafkaUserErrorLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "EventHubVNetConnectionEvent",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "CustomerManagedKeyUserLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "apiVersion": "2021-06-01",
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('workspaceSku')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "location": "[parameters('location')]",
      "name": "[parameters('storageAccountName')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2021-04-01",
          "name": "[concat('default/', parameters('capturesContainerName'))]",
          "dependsOn": ["[variables('storageAccountId')]"],
          "properties": {
            "publicAccess": "Blob"
          }
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2021-04-01",
          "name": "[concat('default/', parameters('checkpointsContainerName'))]",
          "dependsOn": ["[variables('storageAccountId')]"],
          "properties": {
            "publicAccess": "Blob"
          }
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2021-04-01",
          "name": "[concat('default/', parameters('snapshotsContainerName'))]",
          "dependsOn": ["[variables('storageAccountId')]"],
          "properties": {
            "publicAccess": "Blob"
          }
        },
        {
          "type": "providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "Microsoft.Insights/settings",
          "dependsOn": [
            "[variables('storageAccountId')]",
            "[variables('workspaceId')]"
          ],
          "properties": {
            "workspaceId": "[variables('workspaceId')]",
            "storageAccountId": "[variables('storageAccountId')]",
            "metrics": [
              {
                "category": "Transaction",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          }
        },
        {
          "type": "blobServices/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "default/Microsoft.Insights/settings",
          "dependsOn": [
            "[variables('storageAccountId')]",
            "[variables('workspaceId')]"
          ],
          "properties": {
            "workspaceId": "[variables('workspaceId')]",
            "storageAccountId": "[variables('storageAccountId')]",
            "logs": [
              {
                "category": "StorageRead",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "StorageWrite",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              },
              {
                "category": "StorageDelete",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ],
            "metrics": [
              {
                "category": "Transaction",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "resources": [
        {
          "apiVersion": "2017-05-01-preview",
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "dependsOn": [
            "[variables('hostingPlanId')]",
            "[variables('workspaceId')]"
          ],
          "properties": {
            "mode": "Incremental",
            "workspaceId": "[variables('workspaceId')]",
            "logs": [],
            "metrics": [
              {
                "category": "AllMetrics",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[variables('hostingPlanId')]",
        "[variables('applicationInsightsId')]",
        "[variables('storageAccountId')]",
        "[variables('eventHubsNamespaceId')]"
      ],
      "kind": "functionapp",
      "properties": {
        "clientAffinityEnabled": false,
        "alwaysOn": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('applicationInsightsId'), '2018-05-01-preview').instrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[concat('InstrumentationKey=', reference(variables('applicationInsightsId'), '2018-05-01-preview').instrumentationKey)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(variables('storageAccountId'), '2019-06-01').keys[0].value,';')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(variables('storageAccountId'), '2019-06-01').keys[0].value,';')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('hostingPlanName'))]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~12"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            },
            {
              "name": "WEBSITE_DNS_SERVER",
              "value": "168.63.129.16"
            },
            {
              "name": "StorageAccountName",
              "value": "[parameters('storageAccountName')]"
            },
            {
              "name": "EventHubsNamespace",
              "value": "[parameters('eventHubsNamespace')]"
            },
            {
              "name": "EventHubName",
              "value": "[parameters('eventHubName')]"
            },
            {
              "name": "ConsumerGroupName",
              "value": "[parameters('consumerGroupName')]"
            },
            {
              "name": "CapturesContainerName",
              "value": "[parameters('capturesContainerName')]"
            },
            {
              "name": "CheckpointsContainerName",
              "value": "[parameters('checkpointsContainerName')]"
            },
            {
              "name": "SnapshotsContainerName",
              "value": "[parameters('snapshotsContainerName')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticsettings",
          "name": "Microsoft.Insights/service",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[variables('functionAppId')]",
            "[variables('workspaceId')]"
          ],
          "properties": {
            "workspaceId": "[variables('workspaceId')]",
            "logs": [
              {
                "category": "FunctionAppLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "location": "[parameters('location')]",
      "name": "[parameters('applicationInsightsName')]",
      "kind": "web",
      "dependsOn": ["[variables('workspaceId')]"],
      "properties": {
        "Application_Type": "web",
        "SamplingPercentage": 100,
        "DisableIpMasking": true,
        "WorkspaceResourceId": "[variables('workspaceId')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('storageBlobDataOwnerAssignmentName')]",
      "dependsOn": [
        "[variables('functionAppId')]",
        "[variables('storageAccountId')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('storageBlobDataOwnerRoleDefinitionId')]",
        "description": "Assign the Storage Blob Data Owner role on the storage account to the system assigned managed identity of the Azure Function.",
        "principalId": "[reference(variables('functionAppId'), '2021-02-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('azureEventHubsDataOwnerAssignmentName')]",
      "dependsOn": [
        "[variables('functionAppId')]",
        "[variables('eventHubsNamespaceId')]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('azureEventHubsDataOwnerRoleDefinitionId')]",
        "description": "Assign the Azure Event Hubs Data Owner role on the Event Hubs namespace to the system assigned managed identity of the Azure Function.",
        "principalId": "[reference(variables('functionAppId'), '2021-02-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    }
  }
}
